// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Threading;

namespace AzureAIAgents
{
    // Data plane generated client.
    /// <summary> The AzureAIAgents service client. </summary>
    public partial class AzureAIAgentsClient
    {
        private readonly ClientPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual ClientPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of AzureAIAgentsClient for mocking. </summary>
        protected AzureAIAgentsClient()
        {
        }

        /// <summary> Initializes a new instance of AzureAIAgentsClient. </summary>
        /// <param name="endpoint"> Service host. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public AzureAIAgentsClient(Uri endpoint) : this(endpoint, new AzureAIAgentsClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AzureAIAgentsClient. </summary>
        /// <param name="endpoint"> Service host. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public AzureAIAgentsClient(Uri endpoint, AzureAIAgentsClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));
            options ??= new AzureAIAgentsClientOptions();

            _pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>());
            _endpoint = endpoint;
        }

        private Conversations _cachedConversations;
        private Agents _cachedAgents;
        private Responses _cachedResponses;

        /// <summary> Initializes a new instance of Conversations. </summary>
        public virtual Conversations GetConversationsClient()
        {
            return Volatile.Read(ref _cachedConversations) ?? Interlocked.CompareExchange(ref _cachedConversations, new Conversations(_pipeline, _endpoint), null) ?? _cachedConversations;
        }

        /// <summary> Initializes a new instance of Agents. </summary>
        public virtual Agents GetAgentsClient()
        {
            return Volatile.Read(ref _cachedAgents) ?? Interlocked.CompareExchange(ref _cachedAgents, new Agents(_pipeline, _endpoint), null) ?? _cachedAgents;
        }

        /// <summary> Initializes a new instance of Responses. </summary>
        public virtual Responses GetResponsesClient()
        {
            return Volatile.Read(ref _cachedResponses) ?? Interlocked.CompareExchange(ref _cachedResponses, new Responses(_pipeline, _endpoint), null) ?? _cachedResponses;
        }
    }
}
