// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// The results of a web search tool call. See the
    /// [web search guide](/docs/guides/tools-web-search) for more information.
    ///
    /// </summary>
    public partial class WebSearchToolCallItemParam : ItemParam
    {
        /// <summary> Initializes a new instance of <see cref="WebSearchToolCallItemParam"/>. </summary>
        /// <param name="action">
        /// An object describing the specific action taken in this web search call.
        /// Includes details on how the model used the web (search, open_page, find).
        /// Please note <see cref="WebSearchAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSearchActionFind"/>, <see cref="WebSearchActionOpenPage"/> and <see cref="WebSearchActionSearch"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="action"/> is null. </exception>
        public WebSearchToolCallItemParam(WebSearchAction action)
        {
            Argument.AssertNotNull(action, nameof(action));

            Type = ItemType.WebSearchCall;
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="WebSearchToolCallItemParam"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="action">
        /// An object describing the specific action taken in this web search call.
        /// Includes details on how the model used the web (search, open_page, find).
        /// Please note <see cref="WebSearchAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSearchActionFind"/>, <see cref="WebSearchActionOpenPage"/> and <see cref="WebSearchActionSearch"/>.
        /// </param>
        internal WebSearchToolCallItemParam(ItemType type, IDictionary<string, BinaryData> serializedAdditionalRawData, WebSearchAction action) : base(type, serializedAdditionalRawData)
        {
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="WebSearchToolCallItemParam"/> for deserialization. </summary>
        internal WebSearchToolCallItemParam()
        {
        }

        /// <summary>
        /// An object describing the specific action taken in this web search call.
        /// Includes details on how the model used the web (search, open_page, find).
        /// Please note <see cref="WebSearchAction"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="WebSearchActionFind"/>, <see cref="WebSearchActionOpenPage"/> and <see cref="WebSearchActionSearch"/>.
        /// </summary>
        public WebSearchAction Action { get; set; }
    }
}
