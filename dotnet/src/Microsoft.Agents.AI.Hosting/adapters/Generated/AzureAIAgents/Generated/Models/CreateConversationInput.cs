// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> The CreateConversationInput. </summary>
    public partial class CreateConversationInput
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CreateConversationInput"/>. </summary>
        public CreateConversationInput()
        {
            Metadata = new ChangeTrackingDictionary<string, string>();
            Items = new ChangeTrackingList<ItemParam>();
        }

        /// <summary> Initializes a new instance of <see cref="CreateConversationInput"/>. </summary>
        /// <param name="metadata"></param>
        /// <param name="items">
        /// Please note <see cref="ItemParam"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ResponsesAssistantMessageItemParam"/>, <see cref="CodeInterpreterToolCallItemParam"/>, <see cref="ComputerToolCallItemParam"/>, <see cref="ComputerToolCallOutputItemParam"/>, <see cref="ResponsesDeveloperMessageItemParam"/>, <see cref="FileSearchToolCallItemParam"/>, <see cref="FunctionToolCallItemParam"/>, <see cref="FunctionToolCallOutputItemParam"/>, <see cref="ImageGenToolCallItemParam"/>, <see cref="ItemReferenceItemParam"/>, <see cref="LocalShellToolCallItemParam"/>, <see cref="LocalShellToolCallOutputItemParam"/>, <see cref="MCPApprovalRequestItemParam"/>, <see cref="MCPApprovalResponseItemParam"/>, <see cref="MCPCallItemParam"/>, <see cref="MCPListToolsItemParam"/>, <see cref="ResponsesMessageItemParam"/>, <see cref="ReasoningItemParam"/>, <see cref="StructuredInputsItemParam"/>, <see cref="ResponsesSystemMessageItemParam"/>, <see cref="ResponsesUserMessageItemParam"/> and <see cref="WebSearchToolCallItemParam"/>.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CreateConversationInput(IDictionary<string, string> metadata, IList<ItemParam> items, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Metadata = metadata;
            Items = items;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets the metadata. </summary>
        public IDictionary<string, string> Metadata { get; }
        /// <summary>
        /// Gets the items
        /// Please note <see cref="ItemParam"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ResponsesAssistantMessageItemParam"/>, <see cref="CodeInterpreterToolCallItemParam"/>, <see cref="ComputerToolCallItemParam"/>, <see cref="ComputerToolCallOutputItemParam"/>, <see cref="ResponsesDeveloperMessageItemParam"/>, <see cref="FileSearchToolCallItemParam"/>, <see cref="FunctionToolCallItemParam"/>, <see cref="FunctionToolCallOutputItemParam"/>, <see cref="ImageGenToolCallItemParam"/>, <see cref="ItemReferenceItemParam"/>, <see cref="LocalShellToolCallItemParam"/>, <see cref="LocalShellToolCallOutputItemParam"/>, <see cref="MCPApprovalRequestItemParam"/>, <see cref="MCPApprovalResponseItemParam"/>, <see cref="MCPCallItemParam"/>, <see cref="MCPListToolsItemParam"/>, <see cref="ResponsesMessageItemParam"/>, <see cref="ReasoningItemParam"/>, <see cref="StructuredInputsItemParam"/>, <see cref="ResponsesSystemMessageItemParam"/>, <see cref="ResponsesUserMessageItemParam"/> and <see cref="WebSearchToolCallItemParam"/>.
        /// </summary>
        public IList<ItemParam> Items { get; }
    }
}
