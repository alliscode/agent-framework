// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// **o-series models only**
    ///
    /// Configuration options for
    /// [reasoning models](https://platform.openai.com/docs/guides/reasoning).
    /// </summary>
    public partial class Reasoning
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="Reasoning"/>. </summary>
        public Reasoning()
        {
        }

        /// <summary> Initializes a new instance of <see cref="Reasoning"/>. </summary>
        /// <param name="effort"></param>
        /// <param name="summary">
        /// A summary of the reasoning performed by the model. This can be
        /// useful for debugging and understanding the model's reasoning process.
        /// One of `auto`, `concise`, or `detailed`.
        /// </param>
        /// <param name="generateSummary">
        /// **Deprecated:** use `summary` instead.
        ///
        /// A summary of the reasoning performed by the model. This can be
        /// useful for debugging and understanding the model's reasoning process.
        /// One of `auto`, `concise`, or `detailed`.
        /// </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal Reasoning(ReasoningEffort? effort, ReasoningSummary? summary, ReasoningGenerateSummary? generateSummary, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Effort = effort;
            Summary = summary;
            GenerateSummary = generateSummary;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Gets or sets the effort. </summary>
        public ReasoningEffort? Effort { get; set; }
        /// <summary>
        /// A summary of the reasoning performed by the model. This can be
        /// useful for debugging and understanding the model's reasoning process.
        /// One of `auto`, `concise`, or `detailed`.
        /// </summary>
        public ReasoningSummary? Summary { get; set; }
        /// <summary>
        /// **Deprecated:** use `summary` instead.
        ///
        /// A summary of the reasoning performed by the model. This can be
        /// useful for debugging and understanding the model's reasoning process.
        /// One of `auto`, `concise`, or `detailed`.
        /// </summary>
        public ReasoningGenerateSummary? GenerateSummary { get; set; }
    }
}
