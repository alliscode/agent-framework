// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// The output of a computer tool call.
    ///
    /// </summary>
    public partial class ComputerToolCallOutputItemParam : ItemParam
    {
        /// <summary> Initializes a new instance of <see cref="ComputerToolCallOutputItemParam"/>. </summary>
        /// <param name="callId"> The ID of the computer tool call that produced the output. </param>
        /// <param name="output">
        /// Please note <see cref="ComputerToolCallOutputItemOutput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ComputerToolCallOutputItemOutputComputerScreenshot"/>.
        /// </param>
        /// <exception cref="ArgumentNullException"> <paramref name="callId"/> or <paramref name="output"/> is null. </exception>
        public ComputerToolCallOutputItemParam(string callId, ComputerToolCallOutputItemOutput output)
        {
            Argument.AssertNotNull(callId, nameof(callId));
            Argument.AssertNotNull(output, nameof(output));

            Type = ItemType.ComputerCallOutput;
            CallId = callId;
            AcknowledgedSafetyChecks = new ChangeTrackingList<ComputerToolCallSafetyCheck>();
            Output = output;
        }

        /// <summary> Initializes a new instance of <see cref="ComputerToolCallOutputItemParam"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="callId"> The ID of the computer tool call that produced the output. </param>
        /// <param name="acknowledgedSafetyChecks">
        /// The safety checks reported by the API that have been acknowledged by the
        /// developer.
        /// </param>
        /// <param name="output">
        /// Please note <see cref="ComputerToolCallOutputItemOutput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ComputerToolCallOutputItemOutputComputerScreenshot"/>.
        /// </param>
        internal ComputerToolCallOutputItemParam(ItemType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string callId, IList<ComputerToolCallSafetyCheck> acknowledgedSafetyChecks, ComputerToolCallOutputItemOutput output) : base(type, serializedAdditionalRawData)
        {
            CallId = callId;
            AcknowledgedSafetyChecks = acknowledgedSafetyChecks;
            Output = output;
        }

        /// <summary> Initializes a new instance of <see cref="ComputerToolCallOutputItemParam"/> for deserialization. </summary>
        internal ComputerToolCallOutputItemParam()
        {
        }

        /// <summary> The ID of the computer tool call that produced the output. </summary>
        public string CallId { get; set; }
        /// <summary>
        /// The safety checks reported by the API that have been acknowledged by the
        /// developer.
        /// </summary>
        public IList<ComputerToolCallSafetyCheck> AcknowledgedSafetyChecks { get; }
        /// <summary>
        /// Gets or sets the output
        /// Please note <see cref="ComputerToolCallOutputItemOutput"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
        /// The available derived classes include <see cref="ComputerToolCallOutputItemOutputComputerScreenshot"/>.
        /// </summary>
        public ComputerToolCallOutputItemOutput Output { get; set; }
    }
}
