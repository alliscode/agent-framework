// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace AzureAIAgents.Models
{
    /// <summary> The AgentObject. </summary>
    public partial class AgentObject
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AgentObject"/>. </summary>
        /// <param name="id"> The unique identifier of the agent. </param>
        /// <param name="name"> The name of the agent. </param>
        /// <param name="labels"> The labels and their version associations for this agent. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="name"/> or <paramref name="labels"/> is null. </exception>
        internal AgentObject(string id, string name, IEnumerable<AgentLabelObject> labels)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(labels, nameof(labels));

            Id = id;
            Name = name;
            Labels = labels.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="AgentObject"/>. </summary>
        /// <param name="object"> The object type, which is always 'agent'. </param>
        /// <param name="id"> The unique identifier of the agent. </param>
        /// <param name="name"> The name of the agent. </param>
        /// <param name="labels"> The labels and their version associations for this agent. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AgentObject(AgentObjectObject @object, string id, string name, IReadOnlyList<AgentLabelObject> labels, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Object = @object;
            Id = id;
            Name = name;
            Labels = labels;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AgentObject"/> for deserialization. </summary>
        internal AgentObject()
        {
        }

        /// <summary> The object type, which is always 'agent'. </summary>
        public AgentObjectObject Object { get; } = AgentObjectObject.Agent;

        /// <summary> The unique identifier of the agent. </summary>
        public string Id { get; }
        /// <summary> The name of the agent. </summary>
        public string Name { get; }
        /// <summary> The labels and their version associations for this agent. </summary>
        public IReadOnlyList<AgentLabelObject> Labels { get; }
    }
}
