// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// A tool call to run a command on the local shell.
    ///
    /// </summary>
    public partial class LocalShellToolCallItemParam : ItemParam
    {
        /// <summary> Initializes a new instance of <see cref="LocalShellToolCallItemParam"/>. </summary>
        /// <param name="callId"> The unique ID of the local shell tool call generated by the model. </param>
        /// <param name="action"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="callId"/> or <paramref name="action"/> is null. </exception>
        public LocalShellToolCallItemParam(string callId, LocalShellExecAction action)
        {
            Argument.AssertNotNull(callId, nameof(callId));
            Argument.AssertNotNull(action, nameof(action));

            Type = ItemType.LocalShellCall;
            CallId = callId;
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="LocalShellToolCallItemParam"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="callId"> The unique ID of the local shell tool call generated by the model. </param>
        /// <param name="action"></param>
        internal LocalShellToolCallItemParam(ItemType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string callId, LocalShellExecAction action) : base(type, serializedAdditionalRawData)
        {
            CallId = callId;
            Action = action;
        }

        /// <summary> Initializes a new instance of <see cref="LocalShellToolCallItemParam"/> for deserialization. </summary>
        internal LocalShellToolCallItemParam()
        {
        }

        /// <summary> The unique ID of the local shell tool call generated by the model. </summary>
        public string CallId { get; set; }
        /// <summary> Gets or sets the action. </summary>
        public LocalShellExecAction Action { get; set; }
    }
}
