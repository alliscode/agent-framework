// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> An event that is emitted when a response finishes as incomplete. </summary>
    public partial class ResponseIncompleteEvent : ResponseStreamEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseIncompleteEvent"/>. </summary>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="response"> The response that was incomplete. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="response"/> is null. </exception>
        internal ResponseIncompleteEvent(int sequenceNumber, Response response) : base(sequenceNumber)
        {
            Argument.AssertNotNull(response, nameof(response));

            Type = ResponseStreamEventType.ResponseIncomplete;
            Response = response;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseIncompleteEvent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="response"> The response that was incomplete. </param>
        internal ResponseIncompleteEvent(ResponseStreamEventType type, int sequenceNumber, IDictionary<string, BinaryData> serializedAdditionalRawData, Response response) : base(type, sequenceNumber, serializedAdditionalRawData)
        {
            Response = response;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseIncompleteEvent"/> for deserialization. </summary>
        internal ResponseIncompleteEvent()
        {
        }

        /// <summary> The response that was incomplete. </summary>
        public Response Response { get; }
    }
}
