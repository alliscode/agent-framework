// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> The MCPToolRequireApproval1. </summary>
    public partial class MCPToolRequireApproval1
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="MCPToolRequireApproval1"/>. </summary>
        public MCPToolRequireApproval1()
        {
        }

        /// <summary> Initializes a new instance of <see cref="MCPToolRequireApproval1"/>. </summary>
        /// <param name="always"> A list of tools that always require approval. </param>
        /// <param name="never"> A list of tools that never require approval. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal MCPToolRequireApproval1(MCPToolRequireApprovalAlways always, MCPToolRequireApprovalNever never, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Always = always;
            Never = never;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> A list of tools that always require approval. </summary>
        public MCPToolRequireApprovalAlways Always { get; set; }
        /// <summary> A list of tools that never require approval. </summary>
        public MCPToolRequireApprovalNever Never { get; set; }
    }
}
