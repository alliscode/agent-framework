// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace AzureAIAgents.Models
{
    /// <summary> The ItemType. </summary>
    public readonly partial struct ItemType : IEquatable<ItemType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ItemType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ItemType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string MessageValue = "message";
        private const string FileSearchCallValue = "file_search_call";
        private const string FunctionCallValue = "function_call";
        private const string FunctionCallOutputValue = "function_call_output";
        private const string ComputerCallValue = "computer_call";
        private const string ComputerCallOutputValue = "computer_call_output";
        private const string WebSearchCallValue = "web_search_call";
        private const string ReasoningValue = "reasoning";
        private const string ItemReferenceValue = "item_reference";
        private const string ImageGenerationCallValue = "image_generation_call";
        private const string CodeInterpreterCallValue = "code_interpreter_call";
        private const string LocalShellCallValue = "local_shell_call";
        private const string LocalShellCallOutputValue = "local_shell_call_output";
        private const string McpListToolsValue = "mcp_list_tools";
        private const string McpApprovalRequestValue = "mcp_approval_request";
        private const string McpApprovalResponseValue = "mcp_approval_response";
        private const string McpCallValue = "mcp_call";

        /// <summary> message. </summary>
        public static ItemType Message { get; } = new ItemType(MessageValue);
        /// <summary> file_search_call. </summary>
        public static ItemType FileSearchCall { get; } = new ItemType(FileSearchCallValue);
        /// <summary> function_call. </summary>
        public static ItemType FunctionCall { get; } = new ItemType(FunctionCallValue);
        /// <summary> function_call_output. </summary>
        public static ItemType FunctionCallOutput { get; } = new ItemType(FunctionCallOutputValue);
        /// <summary> computer_call. </summary>
        public static ItemType ComputerCall { get; } = new ItemType(ComputerCallValue);
        /// <summary> computer_call_output. </summary>
        public static ItemType ComputerCallOutput { get; } = new ItemType(ComputerCallOutputValue);
        /// <summary> web_search_call. </summary>
        public static ItemType WebSearchCall { get; } = new ItemType(WebSearchCallValue);
        /// <summary> reasoning. </summary>
        public static ItemType Reasoning { get; } = new ItemType(ReasoningValue);
        /// <summary> item_reference. </summary>
        public static ItemType ItemReference { get; } = new ItemType(ItemReferenceValue);
        /// <summary> image_generation_call. </summary>
        public static ItemType ImageGenerationCall { get; } = new ItemType(ImageGenerationCallValue);
        /// <summary> code_interpreter_call. </summary>
        public static ItemType CodeInterpreterCall { get; } = new ItemType(CodeInterpreterCallValue);
        /// <summary> local_shell_call. </summary>
        public static ItemType LocalShellCall { get; } = new ItemType(LocalShellCallValue);
        /// <summary> local_shell_call_output. </summary>
        public static ItemType LocalShellCallOutput { get; } = new ItemType(LocalShellCallOutputValue);
        /// <summary> mcp_list_tools. </summary>
        public static ItemType McpListTools { get; } = new ItemType(McpListToolsValue);
        /// <summary> mcp_approval_request. </summary>
        public static ItemType McpApprovalRequest { get; } = new ItemType(McpApprovalRequestValue);
        /// <summary> mcp_approval_response. </summary>
        public static ItemType McpApprovalResponse { get; } = new ItemType(McpApprovalResponseValue);
        /// <summary> mcp_call. </summary>
        public static ItemType McpCall { get; } = new ItemType(McpCallValue);
        /// <summary> Determines if two <see cref="ItemType"/> values are the same. </summary>
        public static bool operator ==(ItemType left, ItemType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ItemType"/> values are not the same. </summary>
        public static bool operator !=(ItemType left, ItemType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ItemType"/>. </summary>
        public static implicit operator ItemType(string value) => new ItemType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ItemType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ItemType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
