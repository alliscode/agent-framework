// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> Emitted when the code interpreter is actively interpreting the code snippet. </summary>
    public partial class ResponseCodeInterpreterCallInterpretingEvent : ResponseStreamEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseCodeInterpreterCallInterpretingEvent"/>. </summary>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="outputIndex"> The index of the output item in the response for which the code interpreter is interpreting code. </param>
        /// <param name="itemId"> The unique identifier of the code interpreter tool call item. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemId"/> is null. </exception>
        internal ResponseCodeInterpreterCallInterpretingEvent(int sequenceNumber, int outputIndex, string itemId) : base(sequenceNumber)
        {
            Argument.AssertNotNull(itemId, nameof(itemId));

            Type = ResponseStreamEventType.ResponseCodeInterpreterCallInterpreting;
            OutputIndex = outputIndex;
            ItemId = itemId;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseCodeInterpreterCallInterpretingEvent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="outputIndex"> The index of the output item in the response for which the code interpreter is interpreting code. </param>
        /// <param name="itemId"> The unique identifier of the code interpreter tool call item. </param>
        internal ResponseCodeInterpreterCallInterpretingEvent(ResponseStreamEventType type, int sequenceNumber, IDictionary<string, BinaryData> serializedAdditionalRawData, int outputIndex, string itemId) : base(type, sequenceNumber, serializedAdditionalRawData)
        {
            OutputIndex = outputIndex;
            ItemId = itemId;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseCodeInterpreterCallInterpretingEvent"/> for deserialization. </summary>
        internal ResponseCodeInterpreterCallInterpretingEvent()
        {
        }

        /// <summary> The index of the output item in the response for which the code interpreter is interpreting code. </summary>
        public int OutputIndex { get; }
        /// <summary> The unique identifier of the code interpreter tool call item. </summary>
        public string ItemId { get; }
    }
}
