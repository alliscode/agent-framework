// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// A list of tools available on an MCP server.
    ///
    /// </summary>
    public partial class MCPListToolsItemParam : ItemParam
    {
        /// <summary> Initializes a new instance of <see cref="MCPListToolsItemParam"/>. </summary>
        /// <param name="serverLabel"> The label of the MCP server. </param>
        /// <param name="tools"> The tools available on the server. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serverLabel"/> or <paramref name="tools"/> is null. </exception>
        public MCPListToolsItemParam(string serverLabel, IEnumerable<MCPListToolsTool> tools)
        {
            Argument.AssertNotNull(serverLabel, nameof(serverLabel));
            Argument.AssertNotNull(tools, nameof(tools));

            Type = ItemType.McpListTools;
            ServerLabel = serverLabel;
            Tools = tools.ToList();
        }

        /// <summary> Initializes a new instance of <see cref="MCPListToolsItemParam"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serverLabel"> The label of the MCP server. </param>
        /// <param name="tools"> The tools available on the server. </param>
        /// <param name="error"> Error message if the server could not list tools. </param>
        internal MCPListToolsItemParam(ItemType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string serverLabel, IList<MCPListToolsTool> tools, string error) : base(type, serializedAdditionalRawData)
        {
            ServerLabel = serverLabel;
            Tools = tools;
            Error = error;
        }

        /// <summary> Initializes a new instance of <see cref="MCPListToolsItemParam"/> for deserialization. </summary>
        internal MCPListToolsItemParam()
        {
        }

        /// <summary> The label of the MCP server. </summary>
        public string ServerLabel { get; set; }
        /// <summary> The tools available on the server. </summary>
        public IList<MCPListToolsTool> Tools { get; }
        /// <summary> Error message if the server could not list tools. </summary>
        public string Error { get; set; }
    }
}
