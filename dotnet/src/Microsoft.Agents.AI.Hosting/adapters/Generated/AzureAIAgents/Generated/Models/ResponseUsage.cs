// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// Represents token usage details including input tokens, output tokens,
    /// a breakdown of output tokens, and the total tokens used.
    /// </summary>
    public partial class ResponseUsage
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ResponseUsage"/>. </summary>
        /// <param name="inputTokens"> The number of input tokens. </param>
        /// <param name="inputTokensDetails"> A detailed breakdown of the input tokens. </param>
        /// <param name="outputTokens"> The number of output tokens. </param>
        /// <param name="outputTokensDetails"> A detailed breakdown of the output tokens. </param>
        /// <param name="totalTokens"> The total number of tokens used. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="inputTokensDetails"/> or <paramref name="outputTokensDetails"/> is null. </exception>
        internal ResponseUsage(int inputTokens, ResponseUsageInputTokensDetails inputTokensDetails, int outputTokens, ResponseUsageOutputTokensDetails outputTokensDetails, int totalTokens)
        {
            Argument.AssertNotNull(inputTokensDetails, nameof(inputTokensDetails));
            Argument.AssertNotNull(outputTokensDetails, nameof(outputTokensDetails));

            InputTokens = inputTokens;
            InputTokensDetails = inputTokensDetails;
            OutputTokens = outputTokens;
            OutputTokensDetails = outputTokensDetails;
            TotalTokens = totalTokens;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseUsage"/>. </summary>
        /// <param name="inputTokens"> The number of input tokens. </param>
        /// <param name="inputTokensDetails"> A detailed breakdown of the input tokens. </param>
        /// <param name="outputTokens"> The number of output tokens. </param>
        /// <param name="outputTokensDetails"> A detailed breakdown of the output tokens. </param>
        /// <param name="totalTokens"> The total number of tokens used. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ResponseUsage(int inputTokens, ResponseUsageInputTokensDetails inputTokensDetails, int outputTokens, ResponseUsageOutputTokensDetails outputTokensDetails, int totalTokens, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            InputTokens = inputTokens;
            InputTokensDetails = inputTokensDetails;
            OutputTokens = outputTokens;
            OutputTokensDetails = outputTokensDetails;
            TotalTokens = totalTokens;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseUsage"/> for deserialization. </summary>
        internal ResponseUsage()
        {
        }

        /// <summary> The number of input tokens. </summary>
        public int InputTokens { get; }
        /// <summary> A detailed breakdown of the input tokens. </summary>
        public ResponseUsageInputTokensDetails InputTokensDetails { get; }
        /// <summary> The number of output tokens. </summary>
        public int OutputTokens { get; }
        /// <summary> A detailed breakdown of the output tokens. </summary>
        public ResponseUsageOutputTokensDetails OutputTokensDetails { get; }
        /// <summary> The total number of tokens used. </summary>
        public int TotalTokens { get; }
    }
}
