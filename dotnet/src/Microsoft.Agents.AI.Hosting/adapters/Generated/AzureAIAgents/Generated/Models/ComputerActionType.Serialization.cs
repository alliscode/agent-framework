// <auto-generated/>

#nullable disable

using System;

namespace AzureAIAgents.Models
{
    internal static partial class ComputerActionTypeExtensions
    {
        public static string ToSerialString(this ComputerActionType value) => value switch
        {
            ComputerActionType.Screenshot => "screenshot",
            ComputerActionType.Click => "click",
            ComputerActionType.DoubleClick => "double_click",
            ComputerActionType.Scroll => "scroll",
            ComputerActionType.Type => "type",
            ComputerActionType.Wait => "wait",
            ComputerActionType.Keypress => "keypress",
            ComputerActionType.Drag => "drag",
            ComputerActionType.Move => "move",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ComputerActionType value.")
        };

        public static ComputerActionType ToComputerActionType(this string value)
        {
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "screenshot")) return ComputerActionType.Screenshot;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "click")) return ComputerActionType.Click;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "double_click")) return ComputerActionType.DoubleClick;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "scroll")) return ComputerActionType.Scroll;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "type")) return ComputerActionType.Type;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "wait")) return ComputerActionType.Wait;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "keypress")) return ComputerActionType.Keypress;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "drag")) return ComputerActionType.Drag;
            if (StringComparer.OrdinalIgnoreCase.Equals(value, "move")) return ComputerActionType.Move;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown ComputerActionType value.");
        }
    }
}
