// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// Indicates that the model should use a built-in tool to generate a response.
    /// [Learn more about built-in tools](/docs/guides/tools).
    /// </summary>
    internal readonly partial struct ToolChoiceObjectType : IEquatable<ToolChoiceObjectType>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="ToolChoiceObjectType"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public ToolChoiceObjectType(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string FileSearchValue = "file_search";
        private const string FunctionValue = "function";
        private const string ComputerValue = "computer_use_preview";
        private const string WebSearchValue = "web_search_preview";
        private const string ImageGenerationValue = "image_generation";
        private const string CodeInterpreterValue = "code_interpreter";
        private const string McpValue = "mcp";

        /// <summary> file_search. </summary>
        public static ToolChoiceObjectType FileSearch { get; } = new ToolChoiceObjectType(FileSearchValue);
        /// <summary> function. </summary>
        public static ToolChoiceObjectType Function { get; } = new ToolChoiceObjectType(FunctionValue);
        /// <summary> computer_use_preview. </summary>
        public static ToolChoiceObjectType Computer { get; } = new ToolChoiceObjectType(ComputerValue);
        /// <summary> web_search_preview. </summary>
        public static ToolChoiceObjectType WebSearch { get; } = new ToolChoiceObjectType(WebSearchValue);
        /// <summary> image_generation. </summary>
        public static ToolChoiceObjectType ImageGeneration { get; } = new ToolChoiceObjectType(ImageGenerationValue);
        /// <summary> code_interpreter. </summary>
        public static ToolChoiceObjectType CodeInterpreter { get; } = new ToolChoiceObjectType(CodeInterpreterValue);
        /// <summary> mcp. </summary>
        public static ToolChoiceObjectType Mcp { get; } = new ToolChoiceObjectType(McpValue);
        /// <summary> Determines if two <see cref="ToolChoiceObjectType"/> values are the same. </summary>
        public static bool operator ==(ToolChoiceObjectType left, ToolChoiceObjectType right) => left.Equals(right);
        /// <summary> Determines if two <see cref="ToolChoiceObjectType"/> values are not the same. </summary>
        public static bool operator !=(ToolChoiceObjectType left, ToolChoiceObjectType right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="ToolChoiceObjectType"/>. </summary>
        public static implicit operator ToolChoiceObjectType(string value) => new ToolChoiceObjectType(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is ToolChoiceObjectType other && Equals(other);
        /// <inheritdoc />
        public bool Equals(ToolChoiceObjectType other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
