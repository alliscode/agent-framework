// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// An invocation of a tool on an MCP server.
    ///
    /// </summary>
    public partial class MCPCallItemResource : ItemResource
    {
        /// <summary> Initializes a new instance of <see cref="MCPCallItemResource"/>. </summary>
        /// <param name="id"></param>
        /// <param name="serverLabel"> The label of the MCP server running the tool. </param>
        /// <param name="name"> The name of the tool that was run. </param>
        /// <param name="arguments"> A JSON string of the arguments passed to the tool. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/>, <paramref name="serverLabel"/>, <paramref name="name"/> or <paramref name="arguments"/> is null. </exception>
        internal MCPCallItemResource(string id, string serverLabel, string name, string arguments) : base(id)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(serverLabel, nameof(serverLabel));
            Argument.AssertNotNull(name, nameof(name));
            Argument.AssertNotNull(arguments, nameof(arguments));

            Type = ItemType.McpCall;
            ServerLabel = serverLabel;
            Name = name;
            Arguments = arguments;
        }

        /// <summary> Initializes a new instance of <see cref="MCPCallItemResource"/>. </summary>
        /// <param name="type"></param>
        /// <param name="id"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serverLabel"> The label of the MCP server running the tool. </param>
        /// <param name="name"> The name of the tool that was run. </param>
        /// <param name="arguments"> A JSON string of the arguments passed to the tool. </param>
        /// <param name="output"> The output from the tool call. </param>
        /// <param name="error"> The error from the tool call, if any. </param>
        internal MCPCallItemResource(ItemType type, string id, IDictionary<string, BinaryData> serializedAdditionalRawData, string serverLabel, string name, string arguments, string output, string error) : base(type, id, serializedAdditionalRawData)
        {
            ServerLabel = serverLabel;
            Name = name;
            Arguments = arguments;
            Output = output;
            Error = error;
        }

        /// <summary> Initializes a new instance of <see cref="MCPCallItemResource"/> for deserialization. </summary>
        internal MCPCallItemResource()
        {
        }

        /// <summary> The label of the MCP server running the tool. </summary>
        public string ServerLabel { get; }
        /// <summary> The name of the tool that was run. </summary>
        public string Name { get; }
        /// <summary> A JSON string of the arguments passed to the tool. </summary>
        public string Arguments { get; }
        /// <summary> The output from the tool call. </summary>
        public string Output { get; }
        /// <summary> The error from the tool call, if any. </summary>
        public string Error { get; }
    }
}
