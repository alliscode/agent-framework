// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// Configuration for a code interpreter container. Optionally specify the IDs
    /// of the files to run the code on.
    /// </summary>
    public partial class CodeInterpreterToolAuto
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="CodeInterpreterToolAuto"/>. </summary>
        public CodeInterpreterToolAuto()
        {
            FileIds = new ChangeTrackingList<string>();
        }

        /// <summary> Initializes a new instance of <see cref="CodeInterpreterToolAuto"/>. </summary>
        /// <param name="type"> Always `auto`. </param>
        /// <param name="fileIds"> An optional list of uploaded files to make available to your code. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal CodeInterpreterToolAuto(CodeInterpreterToolAutoType type, IList<string> fileIds, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Type = type;
            FileIds = fileIds;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Always `auto`. </summary>
        public CodeInterpreterToolAutoType Type { get; } = CodeInterpreterToolAutoType.Auto;

        /// <summary> An optional list of uploaded files to make available to your code. </summary>
        public IList<string> FileIds { get; }
    }
}
