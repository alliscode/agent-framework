// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> Emitted when an error occurs. </summary>
    public partial class ResponseErrorEvent : ResponseStreamEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseErrorEvent"/>. </summary>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="param"> The error parameter. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="message"/> is null. </exception>
        internal ResponseErrorEvent(int sequenceNumber, string code, string message, string param) : base(sequenceNumber)
        {
            Argument.AssertNotNull(message, nameof(message));

            Type = ResponseStreamEventType.Error;
            Code = code;
            Message = message;
            Param = param;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseErrorEvent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="code"> The error code. </param>
        /// <param name="message"> The error message. </param>
        /// <param name="param"> The error parameter. </param>
        internal ResponseErrorEvent(ResponseStreamEventType type, int sequenceNumber, IDictionary<string, BinaryData> serializedAdditionalRawData, string code, string message, string param) : base(type, sequenceNumber, serializedAdditionalRawData)
        {
            Code = code;
            Message = message;
            Param = param;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseErrorEvent"/> for deserialization. </summary>
        internal ResponseErrorEvent()
        {
        }

        /// <summary> The error code. </summary>
        public string Code { get; }
        /// <summary> The error message. </summary>
        public string Message { get; }
        /// <summary> The error parameter. </summary>
        public string Param { get; }
    }
}
