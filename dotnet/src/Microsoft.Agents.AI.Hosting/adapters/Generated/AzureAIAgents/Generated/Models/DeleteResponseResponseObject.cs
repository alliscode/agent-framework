// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace AzureAIAgents.Models
{
    /// <summary> The DeleteResponseResponseObject. </summary>
    public readonly partial struct DeleteResponseResponseObject : IEquatable<DeleteResponseResponseObject>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="DeleteResponseResponseObject"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public DeleteResponseResponseObject(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string ResponseValue = "response";

        /// <summary> response. </summary>
        public static DeleteResponseResponseObject Response { get; } = new DeleteResponseResponseObject(ResponseValue);
        /// <summary> Determines if two <see cref="DeleteResponseResponseObject"/> values are the same. </summary>
        public static bool operator ==(DeleteResponseResponseObject left, DeleteResponseResponseObject right) => left.Equals(right);
        /// <summary> Determines if two <see cref="DeleteResponseResponseObject"/> values are not the same. </summary>
        public static bool operator !=(DeleteResponseResponseObject left, DeleteResponseResponseObject right) => !left.Equals(right);
        /// <summary> Converts a <see cref="string"/> to a <see cref="DeleteResponseResponseObject"/>. </summary>
        public static implicit operator DeleteResponseResponseObject(string value) => new DeleteResponseResponseObject(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is DeleteResponseResponseObject other && Equals(other);
        /// <inheritdoc />
        public bool Equals(DeleteResponseResponseObject other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value != null ? StringComparer.InvariantCultureIgnoreCase.GetHashCode(_value) : 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
