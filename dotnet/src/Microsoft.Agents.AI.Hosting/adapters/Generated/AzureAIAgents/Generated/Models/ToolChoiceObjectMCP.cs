// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> Use this option to force the model to call a specific tool on a remote MCP server. </summary>
    public partial class ToolChoiceObjectMCP : ToolChoiceObject
    {
        /// <summary> Initializes a new instance of <see cref="ToolChoiceObjectMCP"/>. </summary>
        /// <param name="serverLabel"> The label of the MCP server to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="serverLabel"/> is null. </exception>
        public ToolChoiceObjectMCP(string serverLabel)
        {
            Argument.AssertNotNull(serverLabel, nameof(serverLabel));

            Type = ToolChoiceObjectType.Mcp;
            ServerLabel = serverLabel;
        }

        /// <summary> Initializes a new instance of <see cref="ToolChoiceObjectMCP"/>. </summary>
        /// <param name="type"></param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="serverLabel"> The label of the MCP server to use. </param>
        /// <param name="name"> The name of the tool to call on the server. </param>
        internal ToolChoiceObjectMCP(ToolChoiceObjectType type, IDictionary<string, BinaryData> serializedAdditionalRawData, string serverLabel, string name) : base(type, serializedAdditionalRawData)
        {
            ServerLabel = serverLabel;
            Name = name;
        }

        /// <summary> Initializes a new instance of <see cref="ToolChoiceObjectMCP"/> for deserialization. </summary>
        internal ToolChoiceObjectMCP()
        {
        }

        /// <summary> The label of the MCP server to use. </summary>
        public string ServerLabel { get; set; }
        /// <summary> The name of the tool to call on the server. </summary>
        public string Name { get; set; }
    }
}
