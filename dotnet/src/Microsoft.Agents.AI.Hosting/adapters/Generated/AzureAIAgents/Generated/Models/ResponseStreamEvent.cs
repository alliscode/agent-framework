// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary>
    /// The ResponseStreamEvent.
    /// Please note <see cref="ResponseStreamEvent"/> is the base class. According to the scenario, a derived class of the base class might need to be assigned here, or this property needs to be casted to one of the possible derived classes.
    /// The available derived classes include <see cref="ResponseErrorEvent"/>, <see cref="ResponseCodeInterpreterCallCodeDeltaEvent"/>, <see cref="ResponseCodeInterpreterCallCodeDoneEvent"/>, <see cref="ResponseCodeInterpreterCallCompletedEvent"/>, <see cref="ResponseCodeInterpreterCallInProgressEvent"/>, <see cref="ResponseCodeInterpreterCallInterpretingEvent"/>, <see cref="ResponseCompletedEvent"/>, <see cref="ResponseContentPartAddedEvent"/>, <see cref="ResponseContentPartDoneEvent"/>, <see cref="ResponseCreatedEvent"/>, <see cref="ResponseFailedEvent"/>, <see cref="ResponseFileSearchCallCompletedEvent"/>, <see cref="ResponseFileSearchCallInProgressEvent"/>, <see cref="ResponseFileSearchCallSearchingEvent"/>, <see cref="ResponseFunctionCallArgumentsDeltaEvent"/>, <see cref="ResponseFunctionCallArgumentsDoneEvent"/>, <see cref="ResponseImageGenCallCompletedEvent"/>, <see cref="ResponseImageGenCallGeneratingEvent"/>, <see cref="ResponseImageGenCallInProgressEvent"/>, <see cref="ResponseImageGenCallPartialImageEvent"/>, <see cref="ResponseInProgressEvent"/>, <see cref="ResponseIncompleteEvent"/>, <see cref="ResponseMCPCallArgumentsDeltaEvent"/>, <see cref="ResponseMCPCallArgumentsDoneEvent"/>, <see cref="ResponseMCPCallCompletedEvent"/>, <see cref="ResponseMCPCallFailedEvent"/>, <see cref="ResponseMCPCallInProgressEvent"/>, <see cref="ResponseMCPListToolsCompletedEvent"/>, <see cref="ResponseMCPListToolsFailedEvent"/>, <see cref="ResponseMCPListToolsInProgressEvent"/>, <see cref="ResponseOutputItemAddedEvent"/>, <see cref="ResponseOutputItemDoneEvent"/>, <see cref="ResponseTextDeltaEvent"/>, <see cref="ResponseTextDoneEvent"/>, <see cref="ResponseQueuedEvent"/>, <see cref="ResponseReasoningSummaryPartAddedEvent"/>, <see cref="ResponseReasoningSummaryPartDoneEvent"/>, <see cref="ResponseReasoningSummaryTextDeltaEvent"/>, <see cref="ResponseReasoningSummaryTextDoneEvent"/>, <see cref="ResponseReasoningSummaryDeltaEvent"/>, <see cref="ResponseReasoningSummaryDoneEvent"/>, <see cref="ResponseReasoningDeltaEvent"/>, <see cref="ResponseReasoningDoneEvent"/>, <see cref="ResponseRefusalDeltaEvent"/>, <see cref="ResponseRefusalDoneEvent"/>, <see cref="ResponseWebSearchCallCompletedEvent"/>, <see cref="ResponseWebSearchCallInProgressEvent"/> and <see cref="ResponseWebSearchCallSearchingEvent"/>.
    /// </summary>
    public abstract partial class ResponseStreamEvent
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private protected IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="ResponseStreamEvent"/>. </summary>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        protected ResponseStreamEvent(int sequenceNumber)
        {
            SequenceNumber = sequenceNumber;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseStreamEvent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal ResponseStreamEvent(ResponseStreamEventType type, int sequenceNumber, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Type = type;
            SequenceNumber = sequenceNumber;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseStreamEvent"/> for deserialization. </summary>
        internal ResponseStreamEvent()
        {
        }

        /// <summary> Gets or sets the type. </summary>
        public ResponseStreamEventType Type { get; set; }
        /// <summary> The sequence number for this event. </summary>
        public int SequenceNumber { get; }
    }
}
