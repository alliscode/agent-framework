// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> The FileSearchToolCallItemParamResult. </summary>
    public partial class FileSearchToolCallItemParamResult
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="FileSearchToolCallItemParamResult"/>. </summary>
        public FileSearchToolCallItemParamResult()
        {
        }

        /// <summary> Initializes a new instance of <see cref="FileSearchToolCallItemParamResult"/>. </summary>
        /// <param name="fileId"> The unique ID of the file. </param>
        /// <param name="text"> The text that was retrieved from the file. </param>
        /// <param name="filename"> The name of the file. </param>
        /// <param name="score"> The relevance score of the file - a value between 0 and 1. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal FileSearchToolCallItemParamResult(string fileId, string text, string filename, float? score, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            FileId = fileId;
            Text = text;
            Filename = filename;
            Score = score;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> The unique ID of the file. </summary>
        public string FileId { get; set; }
        /// <summary> The text that was retrieved from the file. </summary>
        public string Text { get; set; }
        /// <summary> The name of the file. </summary>
        public string Filename { get; set; }
        /// <summary> The relevance score of the file - a value between 0 and 1. </summary>
        public float? Score { get; set; }
    }
}
