// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> An agent label object that shows the association between agent and a specific version of agent. Labels are used to mark specific versions of the agent for easy retrieval. </summary>
    public partial class AgentLabelObject
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="AgentLabelObject"/>. </summary>
        /// <param name="id"> The unique identifier of the label. Every label update results in a new label ID. </param>
        /// <param name="name"> The name of the label. </param>
        /// <param name="createdAt"> The Unix timestamp (seconds) when the label was created. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="id"/> or <paramref name="name"/> is null. </exception>
        internal AgentLabelObject(string id, string name, DateTimeOffset createdAt)
        {
            Argument.AssertNotNull(id, nameof(id));
            Argument.AssertNotNull(name, nameof(name));

            Id = id;
            Name = name;
            CreatedAt = createdAt;
        }

        /// <summary> Initializes a new instance of <see cref="AgentLabelObject"/>. </summary>
        /// <param name="object"> The object type, which is always 'agent.label'. </param>
        /// <param name="id"> The unique identifier of the label. Every label update results in a new label ID. </param>
        /// <param name="name"> The name of the label. </param>
        /// <param name="createdAt"> The Unix timestamp (seconds) when the label was created. </param>
        /// <param name="agentVersion"> The version of the agent that this label is associated with. If not provided, then the label is not associated with any specific version. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal AgentLabelObject(AgentLabelObjectObject @object, string id, string name, DateTimeOffset createdAt, string agentVersion, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            Object = @object;
            Id = id;
            Name = name;
            CreatedAt = createdAt;
            AgentVersion = agentVersion;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="AgentLabelObject"/> for deserialization. </summary>
        internal AgentLabelObject()
        {
        }

        /// <summary> The object type, which is always 'agent.label'. </summary>
        public AgentLabelObjectObject Object { get; } = AgentLabelObjectObject.AgentLabel;

        /// <summary> The unique identifier of the label. Every label update results in a new label ID. </summary>
        public string Id { get; }
        /// <summary> The name of the label. </summary>
        public string Name { get; }
        /// <summary> The Unix timestamp (seconds) when the label was created. </summary>
        public DateTimeOffset CreatedAt { get; }
        /// <summary> The version of the agent that this label is associated with. If not provided, then the label is not associated with any specific version. </summary>
        public string AgentVersion { get; }
    }
}
