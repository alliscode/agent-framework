// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace AzureAIAgents.Models
{
    /// <summary> Emitted when a partial image is available during image generation streaming. </summary>
    public partial class ResponseImageGenCallPartialImageEvent : ResponseStreamEvent
    {
        /// <summary> Initializes a new instance of <see cref="ResponseImageGenCallPartialImageEvent"/>. </summary>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="outputIndex"> The index of the output item in the response's output array. </param>
        /// <param name="itemId"> The unique identifier of the image generation item being processed. </param>
        /// <param name="partialImageIndex"> 0-based index for the partial image (backend is 1-based, but this is 0-based for the user). </param>
        /// <param name="partialImageB64"> Base64-encoded partial image data, suitable for rendering as an image. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="itemId"/> or <paramref name="partialImageB64"/> is null. </exception>
        internal ResponseImageGenCallPartialImageEvent(int sequenceNumber, int outputIndex, string itemId, int partialImageIndex, string partialImageB64) : base(sequenceNumber)
        {
            Argument.AssertNotNull(itemId, nameof(itemId));
            Argument.AssertNotNull(partialImageB64, nameof(partialImageB64));

            Type = ResponseStreamEventType.ResponseImageGenerationCallPartialImage;
            OutputIndex = outputIndex;
            ItemId = itemId;
            PartialImageIndex = partialImageIndex;
            PartialImageB64 = partialImageB64;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseImageGenCallPartialImageEvent"/>. </summary>
        /// <param name="type"></param>
        /// <param name="sequenceNumber"> The sequence number for this event. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="outputIndex"> The index of the output item in the response's output array. </param>
        /// <param name="itemId"> The unique identifier of the image generation item being processed. </param>
        /// <param name="partialImageIndex"> 0-based index for the partial image (backend is 1-based, but this is 0-based for the user). </param>
        /// <param name="partialImageB64"> Base64-encoded partial image data, suitable for rendering as an image. </param>
        internal ResponseImageGenCallPartialImageEvent(ResponseStreamEventType type, int sequenceNumber, IDictionary<string, BinaryData> serializedAdditionalRawData, int outputIndex, string itemId, int partialImageIndex, string partialImageB64) : base(type, sequenceNumber, serializedAdditionalRawData)
        {
            OutputIndex = outputIndex;
            ItemId = itemId;
            PartialImageIndex = partialImageIndex;
            PartialImageB64 = partialImageB64;
        }

        /// <summary> Initializes a new instance of <see cref="ResponseImageGenCallPartialImageEvent"/> for deserialization. </summary>
        internal ResponseImageGenCallPartialImageEvent()
        {
        }

        /// <summary> The index of the output item in the response's output array. </summary>
        public int OutputIndex { get; }
        /// <summary> The unique identifier of the image generation item being processed. </summary>
        public string ItemId { get; }
        /// <summary> 0-based index for the partial image (backend is 1-based, but this is 0-based for the user). </summary>
        public int PartialImageIndex { get; }
        /// <summary> Base64-encoded partial image data, suitable for rendering as an image. </summary>
        public string PartialImageB64 { get; }
    }
}
